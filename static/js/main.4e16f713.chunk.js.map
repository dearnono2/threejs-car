{"version":3,"sources":["components/Orbit.js","state.js","components/Model.js","components/CameraControls.js","components/CameraBtns.js","components/Txt.js","components/ColorPicker.js","components/LoadingBox.js","App.js","index.js"],"names":["Orbit","useThree","camera","gl","attach","args","domElement","state","cameraPos","THREE","target","shouldUpdate","activeName","activeMesh","Model","props","scene","useLoader","GLTFLoader","path","getObjectByName","object","position","scale","Array","fill","dispos","CameraControls","useFrame","lerp","orbitControls","update","clone","sub","length","CameraBtns","setIndex","btns","useRef","pos","className","ref","map","data","idx","isOn","onClick","index","btns_li","current","querySelectorAll","classList","remove","add","set","handleClick","Txt","txt","useEffect","forEach","box","tit","querySelector","tit_txt","innerText","newTags","count","type","innerHTML","boxs","ColorPicker","e","material","color","getAttribute","showColor","style","backgroundColor","LoadingBox","obj","rotation","x","y","transparent","wireframe","opacity","extend","OrbitControls","App","useState","Index","shadowMap","background","fallback","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e16f713.chunk.js","sourcesContent":["import { useThree } from 'react-three-fiber';\r\n\r\nfunction Orbit() {\r\n  const { camera, gl } = useThree();\r\n\r\n  return (\r\n    // 화면의 궤도를 바꿀 수 있음.\r\n    <orbitControls attach='orbitControls' args={[camera, gl.domElement]} />\r\n  )\r\n}\r\n\r\nexport default Orbit;","import * as THREE from 'three';\n\nconst state = {\n\tcameraPos: new THREE.Vector3(6, 0, 7), //카메라의 현재 위치\n\ttarget: new THREE.Vector3(0, 0, 0), //카메라가 바라보는 대상의 위치\n\tshouldUpdate: true, //해당 값이 false가 되면 카메라 모션 종료\n\tactiveName: 'Cube001_0',\n\tactiveMesh: {}\n};\n\nexport default state;\n","import { useLoader } from 'react-three-fiber';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport state from '../state';\r\n\r\nfunction Model(props) {\r\n  const { scene } = useLoader(GLTFLoader, props.path);\r\n  state.activeMesh = scene.getObjectByName(state.activeName);\r\n\r\n  return (\r\n    <primitive\r\n      object={scene}\r\n      position={props.position}\r\n      scale={new Array(3).fill(props.scale)}\r\n      dispos={null}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Model;","import { useFrame } from 'react-three-fiber';\r\nimport state from '../state';\r\n\r\nfunction CameraControls() {\r\n  useFrame(({ camera, scene }) => {\r\n    if (state.shouldUpdate) {\r\n      //첫번째 인수의 vector위치값으로 팬 이동,\r\n      //두번째 인수 (0~1의 값을 줘서 이동간격 설정, 0에 근접할수록 촘촘히 부드럽게 동작)\r\n      camera.position.lerp(state.cameraPos, 0.05);\r\n      scene.orbitControls.target.lerp(state.target, 0.05);\r\n      scene.orbitControls.update();\r\n\r\n      //반복을 돌때마다의 현재 카메라 위치값에서 타겟위치값을 뺀 거리값을 반환\r\n      const diff = camera.position.clone().sub(state.cameraPos).length();\r\n      if (diff < 0.1) state.shouldUpdate = false;\r\n    }\r\n  })\r\n  return null;\r\n}\r\n\r\nexport default CameraControls;","import state from '../state';\r\nimport { useRef } from 'react';\r\n\r\nfunction CameraBtns({ setIndex }) {\r\n  const btns = useRef(null);\r\n\r\n  const text = ['Consect', 'Dolor', 'Lorem', 'Sit amet', 'Adipisic', 'Corporis'];\r\n\r\n  const pos = {\r\n    0: {\r\n      cameraPos: [7, 0, 7],\r\n      target: [0, 0, 0],\r\n    },\r\n    1: {\r\n      cameraPos: [0, 3, 10],\r\n      target: [1, -2, 0],\r\n    },\r\n    2: {\r\n      cameraPos: [-7, -1, 7],\r\n      target: [0, 0, 0],\r\n    },\r\n    3: {\r\n      cameraPos: [-9, 0, -2],\r\n      target: [0, 0, 0],\r\n    },\r\n    4: {\r\n      cameraPos: [-1, 2, -4],\r\n      target: [0, 1, 0],\r\n    },\r\n    5: {\r\n      cameraPos: [6, 1, -2],\r\n      target: [1, 0, 0],\r\n    },\r\n  }\r\n\r\n  const handleClick = index => {\r\n    const btns_li = btns.current.querySelectorAll('li');\r\n    for (const btn of btns_li) btn.classList.remove('on');\r\n    btns_li[index].classList.add('on');\r\n\r\n    state.cameraPos.set(...pos[index].cameraPos);\r\n    state.target.set(...pos[index].target);\r\n    state.shouldUpdate = true;\r\n    setIndex(index);\r\n  }\r\n\r\n  return (\r\n    <ul className='cameraBtns' ref={btns}>\r\n      {text.map((data, idx) => {\r\n        let isOn = '';\r\n        if (idx === 0) isOn = 'on';\r\n        return <li key={idx} className={isOn} onClick={() => handleClick(idx)}>{data}</li>\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default CameraBtns;","import { useRef, useEffect } from 'react';\r\n\r\nfunction Txt({ index }) {\r\n  const txt = useRef(null);\r\n\r\n  const init = () => {\r\n    const boxs = txt.current.querySelectorAll('article');\r\n    boxs.forEach((box) => {\r\n      const tit = box.querySelector('h2');\r\n      const tit_txt = tit.innerText;\r\n      let newTags = '';\r\n      let count = 0;\r\n      for (const type of tit_txt) newTags += `<span style='transition-delay: ${0.1 * count++}s'>${type}</span>`;\r\n      tit.innerHTML = newTags;\r\n    })\r\n  }\r\n\r\n  const activation = () => {\r\n    const boxs = txt.current.querySelectorAll('article');\r\n    for (const box of boxs) box.classList.remove('on');\r\n    boxs[index].classList.add('on');\r\n  }\r\n\r\n  useEffect(init, [])\r\n  useEffect(activation, [index])\r\n\r\n  return (\r\n    <section className='txt' ref={txt}>\r\n      <article>\r\n        <h2>Consect</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit, amet consectetur adipisicing elit. Odio nihil\r\n          totam minus, expedita debitis quas! Reiciendis distinctio in fugit\r\n          molestiae.\r\n        </p>\r\n      </article>\r\n\r\n      <article>\r\n        <h2>Dolor</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Debitis sit\r\n          enim obcaecati. <br />\r\n          <br />\r\n          Rem id saepe sapiente provident. Itaque dicta explicabo, minima\r\n          assumenda corporis nemo placeat optio quam consectetur! Vel ad\r\n          praesentium aspernatur doloremque quae maxime ipsum exercitationem\r\n          magnam ipsam voluptas?\r\n        </p>\r\n      </article>\r\n\r\n      <article>\r\n        <h2>Lorem</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Neque nisi\r\n          suscipit enim officiis porro, eligendi excepturi repudiandae corrupti\r\n          molestiae.\r\n        </p>\r\n      </article>\r\n\r\n      <article>\r\n        <h2>Sit amet</h2>\r\n        <p>\r\n          Necessitatibus eos maxime eaque quaerat iusto est modi temporibus.\r\n          <br />\r\n          <br />\r\n          Aliquid quaerat accusamus amet blanditiis deserunt eaque, labore nobis\r\n          tempore facere minus inventore totam quo nulla doloremque deleniti\r\n          dolore qui officia consequatur corrupti. <br />\r\n          Lorem ipsum, dolor sit amet consectetur adipisicing elit. Alias, quod!\r\n        </p>\r\n      </article>\r\n\r\n      <article>\r\n        <h2>Adipisic</h2>\r\n        <p>\r\n          Lorem ipsum dolor sit, amet consectetur adipisicing elit. <br />\r\n          <br />\r\n          /Soluta deserunt quam impedit, sunt atque similique expedita accusamus\r\n          omnis, pariatur debitis, perspiciatis adipisci exercitationem natus\r\n          illum ratione neque id placeat voluptas sed minima odio sint.\r\n        </p>\r\n      </article>\r\n\r\n      <article>\r\n        <h2> Corporis</h2>\r\n        <p>\r\n          Lorem, ipsum dolor sit amet consectetur adipisicing elit. <br />\r\n          Minima iste quo doloremque veritatis assumenda quam reiciendis! Et\r\n          pariatur delectus dicta asperiores, iste, modi doloribus architecto\r\n          rerum a omnis molestias.\r\n        </p>\r\n      </article>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Txt;","import state from '../state';\r\nimport * as THREE from 'three';\r\n\r\nfunction ColorPicker() {\r\n  // state에 activeMesh 오브제가 등록되어 있는 경우\r\n  // 컬러픽커 클릭시 클릭한 버튼의 배경색으로 해당 mesh요소의 색상을 변경\r\n  const handleClick = e => {\r\n    if (!state.activeMesh) return;\r\n    state.activeMesh.material.color = new THREE.Color(e.target.getAttribute('data-color'))\r\n  }\r\n\r\n  // 버튼에 보여질 색상\r\n  const showColor = ['#bdf2ee', '#57CC99', '#2D46B9'];\r\n\r\n  // 모형의 디폴트 색이 #bdf2ee(밝은 하늘색)과 비슷한 색상임을 참고. (색상을 입힐 시 #bdf2ee 색상 + 내가고른색상 으로 섞임.)\r\n  return (\r\n    <ul className='colorPicker'>\r\n      {['transparent', '#57CC99', '#2D46B9'].map((color, index) => {\r\n        return (\r\n          <li key={color} data-color={color} style={{ backgroundColor: showColor[index] }} onClick={handleClick}></li>\r\n        )\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ColorPicker;","import { useRef } from 'react';\r\nimport { useFrame } from 'react-three-fiber';\r\n\r\nfunction LoadingBox() {\r\n  const obj = useRef(null);\r\n  useFrame(() => {\r\n    obj.current.rotation.x += 0.03;\r\n    obj.current.rotation.y += 0.03;\r\n  })\r\n\r\n  return (\r\n    <mesh ref={obj}>\r\n      <boxBufferGeometry attach='geometry' args={[1, 1, 1]} />\r\n      <meshStandardMaterial attach='material' transparent wireframe color={'#000'} opacity={0.5} />\r\n    </mesh>\r\n  );\r\n}\r\n\r\nexport default LoadingBox;","import './scss/style.scss';\n\nimport { Canvas, extend } from 'react-three-fiber';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { Suspense } from 'react';\nimport { useState } from 'react';\n//import Dragable from './components/Dragable';\nimport Orbit from './components/Orbit';\nimport Model from './components/Model';\nimport CameraControls from './components/CameraControls';\nimport CameraBtns from './components/CameraBtns';\nimport Txt from './components/Txt';\nimport ColorPicker from './components/ColorPicker';\nimport LoadingBox from './components/LoadingBox';\nextend({ OrbitControls });\n\nfunction App() {\n\tconst [Index, setIndex] = useState(0);\n\n\treturn (\n\t\t<figure>\n\t\t\t<h1>Three.js Car</h1>\n\t\t\t<Canvas shadowMap style={{ background: '#cdcfd3' }} camera={{ position: [7, 7, 7] }}>\n\t\t\t\t<Orbit />\n\t\t\t\t{/* <axesHelper args={[5]} /> */}\n\t\t\t\t<CameraControls />\n\n\t\t\t\t{/* <Dragable transformGroup> */}\n\t\t\t\t<Suspense fallback={<LoadingBox />}>\n\t\t\t\t\t<Model path={process.env.PUBLIC_URL + '/car/scene.gltf'} position={[0, -1, 4]} scale={1} />\n\t\t\t\t</Suspense>\n\t\t\t\t{/* </Dragable> */}\n\t\t\t</Canvas>\n\n\t\t\t<Txt index={Index} />\n\t\t\t<CameraBtns setIndex={setIndex} />\n\t\t\t<ColorPicker />\n\t\t</figure>\n\t);\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}